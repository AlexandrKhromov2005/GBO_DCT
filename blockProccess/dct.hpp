#pragma once
#include <array>
#include <algorithm> 

class DCTProcessor {
public:
    using Block8x8 = std::array<std::array<unsigned char, 8>, 8>;
    using DoubleBlock8x8 = std::array<std::array<double, 8>, 8>;
    
    static void dct_transform(const Block8x8& input, DoubleBlock8x8& output);
    static void inverse_dct(const DoubleBlock8x8& input, Block8x8& output);

private:
    static constexpr DoubleBlock8x8 c = {{ 
        {{0.353553, 0.353553, 0.353553, 0.353553, 0.353553, 0.353553, 0.353553, 0.353553}},
        {{0.490393, 0.415735, 0.277785, 0.0975452, -0.0975452, -0.277785, -0.415735, -0.490393}},
        {{0.46194, 0.191342, -0.191342, -0.46194, -0.46194, -0.191342, 0.191342, 0.46194}},
        {{0.415735, -0.0975452, -0.490393, -0.277785, 0.277785, 0.490393, 0.0975452, -0.415735}},
        {{0.353553, -0.353553, -0.353553, 0.353553, 0.353553, -0.353553, -0.353553, 0.353553}},
        {{0.277785, -0.490393, 0.0975452, 0.415735, -0.415735, -0.0975452, 0.490393, -0.277785}},
        {{0.191342, -0.46194, 0.46194, -0.191342, -0.191342, 0.46194, -0.46194, 0.191342}},
        {{0.0975452, -0.277785, 0.415735, -0.490393, 0.490393, -0.415735, 0.277785, -0.0975452}}
    }};

    static constexpr DoubleBlock8x8 c_t = {{
        {{0.353553, 0.490393, 0.46194, 0.415735, 0.353553, 0.277785, 0.191342, 0.0975452}},
        {{0.353553, 0.415735, 0.191342, -0.0975452, -0.353553, -0.490393, -0.46194, -0.277785}},
        {{0.353553, 0.277785, -0.191342, -0.490393, -0.353553, 0.0975452, 0.46194, 0.415735}},
        {{0.353553, 0.0975452, -0.46194, -0.277785, 0.353553, 0.415735, -0.191342, -0.490393}},
        {{0.353553, -0.0975452, -0.46194, 0.277785, 0.353553, -0.415735, -0.191342, 0.490393}},
        {{0.353553, -0.277785, -0.191342, 0.490393, -0.353553, -0.0975452, 0.46194, -0.415735}},
        {{0.353553, -0.415735, 0.191342, 0.0975452, -0.353553, 0.490393, -0.46194, 0.277785}},
        {{0.353553, -0.490393, 0.46194, -0.415735, 0.353553, -0.277785, 0.191342, -0.0975452}}
    }};

    static void multiply_matrices(const DoubleBlock8x8& a, const DoubleBlock8x8& b, DoubleBlock8x8& result);
    static void convert_to_double(const Block8x8& src, DoubleBlock8x8& dst);
    static void convert_to_uchar(const DoubleBlock8x8& src, Block8x8& dst);
};